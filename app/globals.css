@import url("https://fonts.googleapis.com/css2?family=Outfit:wght@300;500;700&display=swap");

@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@300;500;700&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Hanken+Grotesk:wght@300;500;700;900&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Noto+Sans:ital,wght@0,100..900;1,100..900&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Rubik:ital,wght@0,300..900;1,300..900&display=swap");

@tailwind base;
@tailwind components;
@tailwind utilities;

html,
body {
  font-family: "Poppins", sans-serif;
}

html.lenis {
  height: auto;
}
.lenis.lenis-smooth {
  scroll-behavior: auto;
}
.lenis.lenis-smooth [data-lenis-prevent] {
  overscroll-behavior: contain;
}
.lenis.lenis-stopped {
  overflow: hidden;
}

::-webkit-scrollbar {
  display: none;
}

.vertical-text {
  writing-mode: vertical-rl;
  text-orientation: upright;
}

.cards .card {
  cursor: pointer;
  transition: 400ms;
}

.cards .card img {
  filter: brightness(0.65);
  transition: all 0.3s ease-in;
}

.cards .card p.tip {
  font-size: 1em;
  font-weight: 700;
}

.cards .card:hover {
  transform: scale(1.1, 1.1);
}

.cards .card:hover img {
  filter: brightness(1);
}

.cards:hover > .card:not(:hover) {
  filter: blur(3px);
  transform: scale(0.95, 0.95);
}

.nav-button {
  position: relative;
  transition-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1);
  transition-duration: 400ms;
  transition-property: color;
  opacity: 0.7;
}

.nav-button:hover {
  opacity: 1;
}

.nav-button:focus:after,
.nav-button:hover:after {
  height: 3px;
  left: 0%;
}

.nav-button:after {
  content: "";
  pointer-events: none;
  bottom: 0px;
  position: absolute;
  left: 0;
  right: 0;
  width: 100%;
  height: 0px;
  @apply bg-primary;
  transition-timing-function: ease-out;
  transition-duration: 200ms;
  transition-property: height, bottom;
}

.dropdown:focus-within .dropdown-menu {
  opacity: 1;
  transform: translate(0) scale(1);
  visibility: visible;
}

.mybutton {
  align-items: center;
  cursor: pointer;
  display: flex;
  transition: all 0.3s ease;
  width: fit-content;
  overflow: hidden;
}

.mybutton span {
  opacity: 0;
  margin-left: 8px;
  display: inline-block;
  width: 0;
  transform: translateX(40px);
  transition: all 0.42s cubic-bezier(0.25, 0.8, 0.25, 1);
}

.mybutton:hover span {
  opacity: 1;
  width: 2rem;
  margin-right: 6px;

  transform: translateX(0px);
}

.negative-shadow {
  box-shadow: rgba(80, 70, 68, 0.4) 0px 1px 1px 0px,
    rgba(33, 67, 41, 0.04) 0px 4px 6px 0px,
    rgba(145, 163, 133, 0.05) 0px 2px 0px 0px inset;
}

.button-shadow {
  background-color: #202022;
  box-shadow: rgba(0, 0, 0, 0.35) 0px 1px 2px 0px,
    rgba(0, 0, 0, 0.2) 0px 3px 6px 0px,
    rgba(0, 0, 0, 0.6) 0px -3px 0px 0px inset;
}

.hamburger {
  cursor: pointer;
}

.hamburger input {
  display: none;
}

.hamburger svg {
  /* The size of the SVG defines the overall size */
  height: 2.5em;
  /* Define the transition for transforming the SVG */
  transition: transform 600ms cubic-bezier(0.4, 0, 0.2, 1);
}

.hamburger .line {
  fill: none;
  stroke-linecap: round;
  stroke-linejoin: round;
  stroke-width: 2;
  /* Define the transition for transforming the Stroke */
  transition: stroke-dasharray 600ms cubic-bezier(0.4, 0, 0.2, 1),
    stroke-dashoffset 600ms cubic-bezier(0.4, 0, 0.2, 1);
}

/* .hamburger:hover .line,
.hamburger input:checked ~ * .line {
  @apply stroke-base-200;
} */

.hamburger .line-top-bottom {
  stroke-dasharray: 12 63;
}

.hamburger input:checked + svg {
  transform: rotate(-45deg);
}

.hamburger input:checked + svg .line-top-bottom {
  stroke-dasharray: 20 300;
  stroke-dashoffset: -32.42;
}
